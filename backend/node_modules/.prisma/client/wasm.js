
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  email: 'email',
  passwordHash: 'passwordHash',
  rol: 'rol'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  logo: 'logo'
};

exports.Prisma.PlayerScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  numero: 'numero',
  posicion: 'posicion',
  teamId: 'teamId'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  fechaInicio: 'fechaInicio',
  fechaFin: 'fechaFin'
};

exports.Prisma.GameScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  teamHomeId: 'teamHomeId',
  teamAwayId: 'teamAwayId',
  fecha: 'fecha',
  estado: 'estado',
  gameTime: 'gameTime',
  homeScore: 'homeScore',
  awayScore: 'awayScore',
  currentQuarter: 'currentQuarter',
  quarterLength: 'quarterLength',
  totalQuarters: 'totalQuarters',
  overtimeLength: 'overtimeLength',
  quarterTime: 'quarterTime',
  isOvertime: 'isOvertime'
};

exports.Prisma.PlayerGameStatsScalarFieldEnum = {
  id: 'id',
  gameId: 'gameId',
  playerId: 'playerId',
  puntos: 'puntos',
  rebotes: 'rebotes',
  asistencias: 'asistencias',
  robos: 'robos',
  tapones: 'tapones',
  tirosIntentados: 'tirosIntentados',
  tirosAnotados: 'tirosAnotados',
  tiros3Intentados: 'tiros3Intentados',
  tiros3Anotados: 'tiros3Anotados',
  tirosLibresIntentados: 'tirosLibresIntentados',
  tirosLibresAnotados: 'tirosLibresAnotados',
  minutos: 'minutos',
  plusMinus: 'plusMinus',
  perdidas: 'perdidas'
};

exports.Prisma.SubstitutionScalarFieldEnum = {
  id: 'id',
  gameId: 'gameId',
  playerInId: 'playerInId',
  playerOutId: 'playerOutId',
  timestamp: 'timestamp',
  gameTime: 'gameTime'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Team: 'Team',
  Player: 'Player',
  Event: 'Event',
  Game: 'Game',
  PlayerGameStats: 'PlayerGameStats',
  Substitution: 'Substitution'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Project\\ScoreBackendFinal\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Project\\ScoreBackendFinal\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id           Int    @id @default(autoincrement())\n  nombre       String\n  email        String @unique\n  passwordHash String\n  rol          String\n}\n\nmodel Team {\n  id        Int      @id @default(autoincrement())\n  nombre    String\n  logo      String?\n  players   Player[]\n  homeGames Game[]   @relation(\"HomeTeam\")\n  awayGames Game[]   @relation(\"AwayTeam\")\n}\n\nmodel Player {\n  id               Int               @id @default(autoincrement())\n  nombre           String\n  apellido         String\n  numero           Int\n  posicion         String\n  teamId           Int\n  team             Team              @relation(fields: [teamId], references: [id])\n  stats            PlayerGameStats[]\n  substitutionsIn  Substitution[]    @relation(\"PlayerIn\")\n  substitutionsOut Substitution[]    @relation(\"PlayerOut\")\n  activeInGames    Game[]            @relation(\"ActivePlayers\")\n}\n\nmodel Event {\n  id          Int      @id @default(autoincrement())\n  nombre      String\n  fechaInicio DateTime\n  fechaFin    DateTime\n  games       Game[]\n}\n\nmodel Game {\n  id         Int      @id @default(autoincrement())\n  eventId    Int\n  event      Event    @relation(fields: [eventId], references: [id])\n  teamHomeId Int\n  teamAwayId Int\n  teamHome   Team     @relation(\"HomeTeam\", fields: [teamHomeId], references: [id])\n  teamAway   Team     @relation(\"AwayTeam\", fields: [teamAwayId], references: [id])\n  fecha      DateTime\n  estado     String\n  gameTime   Int      @default(0)\n  homeScore  Int      @default(0)\n  awayScore  Int      @default(0)\n\n  // Quarter management\n  currentQuarter Int     @default(1)\n  quarterLength  Int     @default(720) // Quarter length in seconds (12 minutes = 720 seconds)\n  totalQuarters  Int     @default(4) // Total quarters in regulation\n  overtimeLength Int     @default(300) // Overtime length in seconds (5 minutes = 300 seconds)\n  quarterTime    Int     @default(0) // Current quarter time in seconds\n  isOvertime     Boolean @default(false) // Is game in overtime\n\n  stats         PlayerGameStats[]\n  substitutions Substitution[]\n  activePlayers Player[]          @relation(\"ActivePlayers\")\n}\n\nmodel PlayerGameStats {\n  id                    Int    @id @default(autoincrement())\n  gameId                Int\n  playerId              Int\n  puntos                Int\n  rebotes               Int\n  asistencias           Int\n  robos                 Int\n  tapones               Int\n  tirosIntentados       Int\n  tirosAnotados         Int\n  tiros3Intentados      Int\n  tiros3Anotados        Int\n  tirosLibresIntentados Int    @default(0)\n  tirosLibresAnotados   Int    @default(0)\n  minutos               Int\n  plusMinus             Int\n  perdidas              Int    @default(0)\n  game                  Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)\n  player                Player @relation(fields: [playerId], references: [id], onDelete: Cascade)\n\n  @@unique([gameId, playerId])\n}\n\nmodel Substitution {\n  id          Int      @id @default(autoincrement())\n  gameId      Int\n  playerInId  Int\n  playerOutId Int\n  timestamp   DateTime\n  gameTime    Int\n  game        Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)\n  playerIn    Player   @relation(\"PlayerIn\", fields: [playerInId], references: [id], onDelete: Cascade)\n  playerOut   Player   @relation(\"PlayerOut\", fields: [playerOutId], references: [id], onDelete: Cascade)\n}\n",
  "inlineSchemaHash": "7b95f3e8473e8d389d3060cbda2bad35b00d5ba7d74e72ea5ce93994fb10f88d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rol\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"players\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"PlayerToTeam\"},{\"name\":\"homeGames\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"HomeTeam\"},{\"name\":\"awayGames\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"AwayTeam\"}],\"dbName\":null},\"Player\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellido\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"numero\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"posicion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"PlayerToTeam\"},{\"name\":\"stats\",\"kind\":\"object\",\"type\":\"PlayerGameStats\",\"relationName\":\"PlayerToPlayerGameStats\"},{\"name\":\"substitutionsIn\",\"kind\":\"object\",\"type\":\"Substitution\",\"relationName\":\"PlayerIn\"},{\"name\":\"substitutionsOut\",\"kind\":\"object\",\"type\":\"Substitution\",\"relationName\":\"PlayerOut\"},{\"name\":\"activeInGames\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"ActivePlayers\"}],\"dbName\":null},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaInicio\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"fechaFin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"games\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"EventToGame\"}],\"dbName\":null},\"Game\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToGame\"},{\"name\":\"teamHomeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"teamAwayId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"teamHome\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"HomeTeam\"},{\"name\":\"teamAway\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"AwayTeam\"},{\"name\":\"fecha\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"estado\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"homeScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"awayScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currentQuarter\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quarterLength\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalQuarters\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"overtimeLength\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quarterTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isOvertime\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"stats\",\"kind\":\"object\",\"type\":\"PlayerGameStats\",\"relationName\":\"GameToPlayerGameStats\"},{\"name\":\"substitutions\",\"kind\":\"object\",\"type\":\"Substitution\",\"relationName\":\"GameToSubstitution\"},{\"name\":\"activePlayers\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"ActivePlayers\"}],\"dbName\":null},\"PlayerGameStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gameId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"playerId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"puntos\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rebotes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"asistencias\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"robos\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tapones\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tirosIntentados\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tirosAnotados\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tiros3Intentados\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tiros3Anotados\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tirosLibresIntentados\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"tirosLibresAnotados\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minutos\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"plusMinus\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"perdidas\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"game\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"GameToPlayerGameStats\"},{\"name\":\"player\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"PlayerToPlayerGameStats\"}],\"dbName\":null},\"Substitution\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gameId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"playerInId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"playerOutId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"gameTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"game\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"GameToSubstitution\"},{\"name\":\"playerIn\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"PlayerIn\"},{\"name\":\"playerOut\",\"kind\":\"object\",\"type\":\"Player\",\"relationName\":\"PlayerOut\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

